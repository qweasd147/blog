{"componentChunkName":"component---src-templates-tag-template-tag-template-tsx","path":"/tag/java","result":{"data":{"site":{"siteMetadata":{"title":"Blog by joohyung","subtitle":""}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/java/java-lambda_compile/","categorySlug":"/category/java/"},"frontmatter":{"title":"Lambda를 써야하는 이유","date":"2023-01-06T04:49:25.173Z","category":"java","description":"익명클래스 보다 람다를 써야하는 이유"}}},{"node":{"fields":{"slug":"/posts/java/java-boxing/","categorySlug":"/category/java/"},"frontmatter":{"title":"Boxing, Unboxing & Cache","date":"2022-12-28T10:19:01.562Z","category":"java","description":"Wrapper class의 boxing과 unboxing, 과도한 객체 생성을 막기 위한 캐싱 전략"}}},{"node":{"fields":{"slug":"/posts/java/java-oome/","categorySlug":"/category/java/"},"frontmatter":{"title":"Java OOME 종류","date":"2022-02-10T05:55:23.624Z","category":"java","description":"OOME(Out Of Memory Error) 종류 및 발생 조건"}}},{"node":{"fields":{"slug":"/posts/java/java-jvm/","categorySlug":"/category/java/"},"frontmatter":{"title":"JVM Heap 구조 및 GC","date":"2022-02-03T09:47:11.834Z","category":"java","description":"JVM에서 Heap & Metaspace, GC(Garbage Collector) 이해와 종류"}}}]}},"pageContext":{"group":"java","limit":4,"offset":0,"pagination":{"currentPage":0,"prevPagePath":"/tag/java","nextPagePath":"/tag/java/page/1","hasNextPage":true,"hasPrevPage":false}}},"staticQueryHashes":["251939775","2839666046","2891173899","401334301"]}