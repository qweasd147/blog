{"componentChunkName":"component---src-templates-tag-template-js","path":"/tag/js","result":{"data":{"site":{"siteMetadata":{"title":"Blog by joohyung","subtitle":""}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/js/js-prototype/","categorySlug":"/category/javascript/"},"frontmatter":{"title":"Prototype","date":"2020-05-12T00:44:31.650Z","category":"javascript","description":"javascript에서 상속 등이나 static등을 쓰고 싶을때"}}},{"node":{"fields":{"slug":"/posts/js/js-scope/","categorySlug":"/category/javascript/"},"frontmatter":{"title":"Scope","date":"2020-05-12T00:42:42.358Z","category":"javascript","description":"변수, 함수 등의 유효범위"}}},{"node":{"fields":{"slug":"/posts/js/js-promise/","categorySlug":"/category/javascript/"},"frontmatter":{"title":"Promise","date":"2020-04-28T00:44:36.019Z","category":"javascript","description":"비동기 처리를 깔끔하고 가독성 높게 처리 + 순서를 보장하고 싶을때"}}},{"node":{"fields":{"slug":"/posts/js/js-closure/","categorySlug":"/category/javascript/"},"frontmatter":{"title":"Closure","date":"2016-02-06T22:40:32.169Z","category":"javascript","description":"private, scope등 개념을 활용, 변수의 유효범위를 늘린다."}}}]}},"pageContext":{"tag":"js","currentPage":0,"postsLimit":4,"postsOffset":0,"prevPagePath":"/tag/js","nextPagePath":"/tag/js/page/1","hasPrevPage":false,"hasNextPage":false}}}