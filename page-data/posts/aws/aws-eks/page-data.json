{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/aws/aws-eks/","result":{"data":{"markdownRemark":{"id":"0c939f17-e1d8-5e0a-94b0-a5fbb8e857ff","html":"<p><code class=\"language-text\">terraform</code>으로 구현한 내용은 <a href=\"https://github.com/qweasd147/StudyNote/tree/master/terraform/eks_module\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">eks 예제</a> 에서 확인 가능하다</p>\n<blockquote>\n<p>외부 모듈을 안쓰고 바닐라로 구현하고 싶었는데 잘 안되서 포기</p>\n</blockquote>\n<h2 id=\"사전-준비\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%A0%84-%EC%A4%80%EB%B9%84\" aria-label=\"사전 준비 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사전 준비</h2>\n<ol>\n<li>필요 도구</li>\n</ol>\n<ul>\n<li>terraform</li>\n<li>docker</li>\n<li>awscli</li>\n<li>helm</li>\n</ul>\n<ol start=\"2\">\n<li>aws credentials 셋팅</li>\n</ol>\n<p>terraform에서 구축한건 기본적으로 profile이 <code class=\"language-text\">joo</code>로 셋팅 되어 있다. 필요에 따라 profile을 바꾸던가 지우고 profile에 맞는 aws의 <code class=\"language-text\">config</code>파일과 <code class=\"language-text\">credentials</code> 파일을 셋팅해주자</p>\n<h4 id=\"샘플\" style=\"position:relative;\"><a href=\"#%EC%83%98%ED%94%8C\" aria-label=\"샘플 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>샘플</h4>\n<p>~/.aws/config</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[default]\noutput=json\nregion=ap-northeast-2</code></pre></div>\n<p>~/.aws/credentails</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[joo]\naws_access_key_id     = xxxxxx\naws_secret_access_key = xxxxxx</code></pre></div>\n<ol start=\"3\">\n<li>account 정보 확인</li>\n</ol>\n<p>자신의 <code class=\"language-text\">account id</code>를 사전에 알고 있는게 좋다. 아래 명령어를 통해 확인 가능하고, 샘플 코드에 필요한 부분은 전부 <code class=\"language-text\">{accountId}</code> 로 대체</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ aws sts get-caller-identity --profile joo</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    \"UserId\": \"{userId}\",\n    \"Account\": \"{accountId}\",\n    \"Arn\": \"arn:aws:iam::{accountId}:user/{userName}\"\n}</code></pre></div>\n<p>참고로 코드 내 리전 셋팅은 다 그냥 <code class=\"language-text\">ap-northeast-2</code>로 하드코딩 되어 있다.</p>\n<h1 id=\"실습\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5\" aria-label=\"실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습</h1>\n<h2 id=\"1-terraform으로-eks-구축\" style=\"position:relative;\"><a href=\"#1-terraform%EC%9C%BC%EB%A1%9C-eks-%EA%B5%AC%EC%B6%95\" aria-label=\"1 terraform으로 eks 구축 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. terraform으로 eks 구축.</h2>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ cd ./eks_module\n$ terraform init\n$ terraform apply</code></pre></div>\n<blockquote>\n<p>vpc부터 생성하기 때문에 혹시나 <code class=\"language-text\">cidr block</code> 값이 문제된다면 알아서 잘 수정해주자</p>\n</blockquote>\n<blockquote>\n<p>여기서 <code class=\"language-text\">aws load balancer controller</code> 설치까지 프로비저닝 된다</p>\n</blockquote>\n<blockquote>\n<p><code class=\"language-text\">aws load balancer controller</code>란 aws에서 관리형 k8s가 eks이라서(의존관계가 <code class=\"language-text\">eks</code> -> <code class=\"language-text\">k8s</code>) 일반적으로 k8s에서 elb를 만들 수가 없지만 이를 가능하게 해주는게 <code class=\"language-text\">aws load balancer controller</code>로, eks 위에 설치하면 <code class=\"language-text\">ingress</code>나 <code class=\"language-text\">service</code>를 만들때 <code class=\"language-text\">elb</code>도 자동으로 프로비저닝 되도록 구축 할 수가 있다(<code class=\"language-text\">alb</code>도 가능)</p>\n</blockquote>\n<blockquote>\n<p>terraform으로 설치만 하면 설치를 시도한 IAM계정에 <code class=\"language-text\">EKS API</code>인증모드로 <code class=\"language-text\">EKS</code> 마스터 권한인 <code class=\"language-text\">AmazonEKSAdminPolicy</code>이 부여 된다.(<code class=\"language-text\">ConfigMap(aws-auth)</code>가 아닌 <code class=\"language-text\">EKS-API</code>이다) 만약 aws 콘솔로 로그인한 계정과 다르다면 해당 계정으로 권한을 추가해야 콘솔에서 eks 리소스들 확인이 가능하다.</p>\n</blockquote>\n<h2 id=\"2-kubectl-셋팅-및-확인\" style=\"position:relative;\"><a href=\"#2-kubectl-%EC%85%8B%ED%8C%85-%EB%B0%8F-%ED%99%95%EC%9D%B8\" aria-label=\"2 kubectl 셋팅 및 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. kubectl 셋팅 및 확인</h2>\n<h3 id=\"21-eks-context-업데이트\" style=\"position:relative;\"><a href=\"#21-eks-context-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8\" aria-label=\"21 eks context 업데이트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1 eks context 업데이트</h3>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># kubectl에서 대상이 되는 eks 지정. 지금은 eks 이름이 &#39;test_eks&#39;이지만 필요에 따라 수정이 필요함\n$ aws eks update-kubeconfig --region ap-northeast-2 --profile joo --name test_eks --alias test_eks</code></pre></div>\n<h3 id=\"22-현재-지정-된-k8s-확인\" style=\"position:relative;\"><a href=\"#22-%ED%98%84%EC%9E%AC-%EC%A7%80%EC%A0%95-%EB%90%9C-k8s-%ED%99%95%EC%9D%B8\" aria-label=\"22 현재 지정 된 k8s 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2 현재 지정 된 k8s 확인</h3>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ cat ~/.kube/config\n$ kubectl config current-context # 현재 클러스터 확인</code></pre></div>\n<h2 id=\"3-terraform으로-생성-된-ecr에-로컬에서-빌드--빌드한-이미지-push\" style=\"position:relative;\"><a href=\"#3-terraform%EC%9C%BC%EB%A1%9C-%EC%83%9D%EC%84%B1-%EB%90%9C-ecr%EC%97%90-%EB%A1%9C%EC%BB%AC%EC%97%90%EC%84%9C-%EB%B9%8C%EB%93%9C--%EB%B9%8C%EB%93%9C%ED%95%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-push\" aria-label=\"3 terraform으로 생성 된 ecr에 로컬에서 빌드  빌드한 이미지 push permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. terraform으로 생성 된 ecr에 로컬에서 빌드 &#x26; 빌드한 이미지 push</h2>\n<h3 id=\"31-docker-build\" style=\"position:relative;\"><a href=\"#31-docker-build\" aria-label=\"31 docker build permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1 docker build</h3>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># download nginx image\n$ docker pull nginx:1.23.3\n# build\n$ cd ./nginx\n# mac에서 빌드 해서 platform 추가됨\n$ docker build --platform linux/amd64 -t aws-container-nginx:1.0.0 .</code></pre></div>\n<h3 id=\"32-ecr-login\" style=\"position:relative;\"><a href=\"#32-ecr-login\" aria-label=\"32 ecr login permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2 ecr login</h3>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># ecr 로그인(도커 허브 로그인이라고 생각하면 된다)\n$ aws ecr get-login-password --region ap-northeast-2 --profile joo | docker login --username AWS --password-stdin {accountId}.dkr.ecr.ap-northeast-2.amazonaws.com/test_eks-aws-container-nginx\n# 로그인 확인\n$ cat ~/.docker/config.json\n# ecr 정보 확인\n$ aws ecr describe-repositories --region ap-northeast-2 --profile joo</code></pre></div>\n<h3 id=\"33-ecr로-image-push\" style=\"position:relative;\"><a href=\"#33-ecr%EB%A1%9C-image-push\" aria-label=\"33 ecr로 image push permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.3 ecr로 image push</h3>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ docker tag aws-container-nginx:1.0.0 {accountId}.dkr.ecr.ap-northeast-2.amazonaws.com/test_eks-aws-container-nginx:1.0.0\n$ docker push {accountId}.dkr.ecr.ap-northeast-2.amazonaws.com/test_eks-aws-container-nginx:1.0.0</code></pre></div>\n<blockquote>\n<p>생성된 하나의 ecr마다 각 하나의 image repository가 된다는점 참고 하자</p>\n</blockquote>\n<h2 id=\"4-eks에-namespace-depoymentpod-배포\" style=\"position:relative;\"><a href=\"#4-eks%EC%97%90-namespace-depoymentpod-%EB%B0%B0%ED%8F%AC\" aria-label=\"4 eks에 namespace depoymentpod 배포 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. eks에 namespace, depoyment(pod) 배포</h2>\n<h3 id=\"41-namespace-배포-및-default-namespace-변경kubectl-사용-시\" style=\"position:relative;\"><a href=\"#41-namespace-%EB%B0%B0%ED%8F%AC-%EB%B0%8F-default-namespace-%EB%B3%80%EA%B2%BDkubectl-%EC%82%AC%EC%9A%A9-%EC%8B%9C\" aria-label=\"41 namespace 배포 및 default namespace 변경kubectl 사용 시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.1 namespace 배포 및 default namespace 변경(kubectl 사용 시)</h3>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ kubectl apply -f objects/namespace.yaml\n$ kubectl config set-context --current --namespace joo</code></pre></div>\n<h3 id=\"42-deployment-적용\" style=\"position:relative;\"><a href=\"#42-deployment-%EC%A0%81%EC%9A%A9\" aria-label=\"42 deployment 적용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.2 deployment 적용</h3>\n<p><strong>주의!</strong> <code class=\"language-text\">objects/deployment.yaml</code>파일의 image 경로는 자기 <code class=\"language-text\">accountId</code>에 맞게 바꿔 놓고 배포 한다</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ kubectl apply -f objects/deployment.yaml</code></pre></div>\n<h2 id=\"5-eks에-service-ingress-배포\" style=\"position:relative;\"><a href=\"#5-eks%EC%97%90-service-ingress-%EB%B0%B0%ED%8F%AC\" aria-label=\"5 eks에 service ingress 배포 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. eks에 service, ingress 배포</h2>\n<p><code class=\"language-text\">Service</code> 타입이 LoadBalancer로 배포 하면 <code class=\"language-text\">elb</code> 생성(<code class=\"language-text\">nlb</code>로 생성 됨)되고, ingress로 생성 하면 <code class=\"language-text\">alb</code>가 생성되도록 셋팅 하였다.\n여기선 그냥 <code class=\"language-text\">ingress</code> &#x26; <code class=\"language-text\">alb</code>로 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ kubectl apply -f objects/service-ingress.yaml\n$ kubectl apply -f objects/alb-ingress.yaml</code></pre></div>\n<blockquote>\n<p>serivce 타입을 NodePort타입으로 하였지만 worker node로 생성된 NodePort 번호로는 직접 접근이 불가능하고, ingress(alb)를 거쳐야만 접근이 가능하다.</p>\n</blockquote>\n<p>여기까지 하고 aws에서 리소스 프로비저닝(<code class=\"language-text\">alb</code> 생성)까지 끝나면 접근이 가능하다</p>\n<h3 id=\"51-배포-된-앱-확인\" style=\"position:relative;\"><a href=\"#51-%EB%B0%B0%ED%8F%AC-%EB%90%9C-%EC%95%B1-%ED%99%95%EC%9D%B8\" aria-label=\"51 배포 된 앱 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.1 배포 된 앱 확인</h3>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># 설치된 ingress 확인\n$ kubectl get ingress</code></pre></div>\n<p><code class=\"language-text\">ADDRESS</code> 주소가 생성 된 <code class=\"language-text\">alb</code> 주소가 된다.</p>\n<h1 id=\"기본적인-명령어\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"기본적인 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본적인 명령어</h1>\n<h3 id=\"1-k8s-리소스-정보-확인\" style=\"position:relative;\"><a href=\"#1-k8s-%EB%A6%AC%EC%86%8C%EC%8A%A4-%EC%A0%95%EB%B3%B4-%ED%99%95%EC%9D%B8\" aria-label=\"1 k8s 리소스 정보 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. k8s 리소스 정보 확인</h3>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ kubectl get {pod, deployment, svc, ingress 등등} -n joo -o wide # namespace(-n)는 생략 가능</code></pre></div>\n<ul>\n<li>-n : namespace</li>\n<li>-o wide : 상세 정보 확인</li>\n</ul>\n<h3 id=\"2-pod-접근-url-요청-및-로그-확인\" style=\"position:relative;\"><a href=\"#2-pod-%EC%A0%91%EA%B7%BC-url-%EC%9A%94%EC%B2%AD-%EB%B0%8F-%EB%A1%9C%EA%B7%B8-%ED%99%95%EC%9D%B8\" aria-label=\"2 pod 접근 url 요청 및 로그 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. pod 접근, url 요청 및 로그 확인</h3>\n<p>get 명령어로 pod name 및 private id 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ kubectl get pods -o wide</code></pre></div>\n<p>특정 pod 직접 접근</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ kubectl exec -it {pod_name} -- /bin/sh</code></pre></div>\n<p>특정 pod로 url 요청</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ kubectl exec -it {pod_name} -- curl http://{pod_ip}</code></pre></div>\n<p>특정 pod의 로그 보기</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ kubectl logs -f {pod_name}</code></pre></div>\n<h3 id=\"3-k8s-리소스-자세한-설명에러-날-때-유용\" style=\"position:relative;\"><a href=\"#3-k8s-%EB%A6%AC%EC%86%8C%EC%8A%A4-%EC%9E%90%EC%84%B8%ED%95%9C-%EC%84%A4%EB%AA%85%EC%97%90%EB%9F%AC-%EB%82%A0-%EB%95%8C-%EC%9C%A0%EC%9A%A9\" aria-label=\"3 k8s 리소스 자세한 설명에러 날 때 유용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. k8s 리소스 자세한 설명(에러 날 때 유용)</h3>\n<p>설치 된 ingress인 ‘aws-container-nginx-ingress’ 확인 예시</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ kubectl describe ingress aws-container-nginx-ingress</code></pre></div>\n<p>당연히 다른 resource 들도 가능함</p>\n<h3 id=\"4-eks에-설치-가능한-addon-확인\" style=\"position:relative;\"><a href=\"#4-eks%EC%97%90-%EC%84%A4%EC%B9%98-%EA%B0%80%EB%8A%A5%ED%95%9C-addon-%ED%99%95%EC%9D%B8\" aria-label=\"4 eks에 설치 가능한 addon 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. eks에 설치 가능한 addon 확인</h3>\n<p>k8s 명령어는 아니지만 설치해야할 addon 버전 확인할때 유용하다. 아래 명령어는 ‘aws-ebs-csi-driver’ 에드온을 k8s 버전 <code class=\"language-text\">1.30</code>에 설치 할 때 설치 가능한 버전들을 보여준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ aws eks describe-addon-versions --addon-name aws-ebs-csi-driver --kubernetes-version 1.30 --profile joo --region ap-northeast-2</code></pre></div>\n<h3 id=\"5-설치-된-resource-삭제\" style=\"position:relative;\"><a href=\"#5-%EC%84%A4%EC%B9%98-%EB%90%9C-resource-%EC%82%AD%EC%A0%9C\" aria-label=\"5 설치 된 resource 삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 설치 된 resource 삭제</h3>\n<p>아래와 같이 <code class=\"language-text\">apply</code> 대신 <code class=\"language-text\">delete</code>로 바꿔서 실행하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ kubectl delete -f objects/service.yaml</code></pre></div>\n<h2 id=\"실습-종료설치-된-aws-resource-들-삭제\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%EC%A2%85%EB%A3%8C%EC%84%A4%EC%B9%98-%EB%90%9C-aws-resource-%EB%93%A4-%EC%82%AD%EC%A0%9C\" aria-label=\"실습 종료설치 된 aws resource 들 삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 종료(설치 된 aws resource 들 삭제)</h2>\n<h3 id=\"1-ecr-로그아웃\" style=\"position:relative;\"><a href=\"#1-ecr-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83\" aria-label=\"1 ecr 로그아웃 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. ecr 로그아웃</h3>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ docker logout {account-id}.dkr.ecr.ap-northeast-2.amazonaws.com</code></pre></div>\n<h3 id=\"2-kubeconfig-clear-context\" style=\"position:relative;\"><a href=\"#2-kubeconfig-clear-context\" aria-label=\"2 kubeconfig clear context permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. kubeconfig clear context</h3>\n<p>현재 클러스터 확인 및 context clear</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># 현재 활성화 된 context 확인\nkubectl config get-contexts\nkubectl config delete-context test_eks</code></pre></div>\n<p>생성 된 resource 정리는 <code class=\"language-text\">iac</code> 답게 <code class=\"language-text\">$ terraform destroy</code> 한방이면 되지만 alb는 terraform이 생성 한게 아닌 자신이 실습 과정에서 만든 resource 이므로 테라폼이 삭제를 못해서 에러 또는 타임아웃이 발생한다.\n그래서 다른 k8s resource는 상관없지만 <code class=\"language-text\">ingress</code>는 삭제 처리해서 <code class=\"language-text\">elb</code>도 같이 지워줘야 한다</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ kubectl apply -f objects/alb-ingress.yaml</code></pre></div>\n<p>또 ecr에 저장된 image가 있으면 삭제가 안된다. 이걸 무시하는 옵션이 있긴하지만 에러 내용도 볼겸 구지 추가하진 않았다.\n(image 삭제는 귀찮으니까 aws 콘솔에서 직접 삭제 처리)</p>\n<p>그 외 terraform resource들은 destroy 하면 끝난다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ terraform destroy</code></pre></div>","fields":{"slug":"/posts/aws/aws-eks/","tagSlugs":["/tag/aws/","/tag/eks/","/tag/kubernetes/"]},"frontmatter":{"date":"2024-08-10T16:27:52.350Z","description":"Terraform으로 EKS 구축 및 배포 실습, 자주 쓰는 명령어들 모음","tags":["aws","eks","kubernetes"],"title":"Terraform으로 구축하는 EKS","socialImage":null}}},"pageContext":{"slug":"/posts/aws/aws-eks/"}},"staticQueryHashes":["251939775","2839666046","2891173899","401334301"]}