{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/etc/etc-tf-s3-lifecycle/","result":{"data":{"markdownRemark":{"id":"58eb61f8-3d9a-5275-8b8c-ae1cc5c25d16","html":"<h2 id=\"1-s3-storage-class\" style=\"position:relative;\"><a href=\"#1-s3-storage-class\" aria-label=\"1 s3 storage class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. S3 Storage Class</h2>\n<p>S3는 모든데이터를 물리적으로 동일한 스펙인 곳에 저장 할 수도 있지만, 경우에 따라 다른 곳에 저장 할 수도 있다. 이렇게 저장되는 디스크의 스팩을 여러개로 나눠서 구분하고, 이를 S3 storage class 라고 한다.</p>\n<blockquote>\n<p>쉽게 말하면 자주 쓰는것(게임)은 ssd에 저장하고 잘 안쓰는 데이터는 그냥 하드 디스크에 저장해서 관리하여 비용 측면에서 더욱 저렴하게 관리 할 수도 있다는 말이다.</p>\n</blockquote>\n<p>제공해주는 class 종류는 많은데 결국엔 최근 쓰여진 파일은 많이 읽기/쓰기가 많으니까 좋은곳에 두고, 오래된 파일들은 어차피 자주 안보고 보존or가끔 볼때가 목적인 경우가 많으니까 어디 구석에 두자는 말이다. 물론 이런 class일 수록 비용은 더 저렴하다.</p>\n<p><img src=\"/blog/media/aws/s3/s3-storage-classes.png\" alt=\"img1\"></p>\n<blockquote>\n<p>이미지 출처 <a href=\"https://catalog.us-east-1.prod.workshops.aws/workshops/f238037c-8f0b-446e-9c15-ebcc4908901a/en-US/002-services/002-storage/003-s3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://catalog.us-east-1.prod.workshops.aws/workshops/f238037c-8f0b-446e-9c15-ebcc4908901a/en-US/002-services/002-storage/003-s3</a></p>\n</blockquote>\n<p>참고로 일반적으로 사용되는 class는 <code class=\"language-text\">Standard class</code>이다. 각 클래스 마다 장단점은 있지만 눈에 띄는 class만 적어보자면</p>\n<p><strong>1. S3 Zone-IA</strong></p>\n<p>이름처럼 하나의 az에 데이터를 저장하기 때문에 해당 az가 물리적으로 날라가면 데이터가 그냥 날라간다</p>\n<p><strong>2. S3 Glacier Flexible Retrieval, S3 Glacier Deep Archive</strong></p>\n<p>다른 storage는 생각보다 standard 클래스랑 처리량 스펙이 똑같은데 이 두 class는 지연시간이 길 수도 있다. 또한 검색한 gb당 요금이 책정되는 점도 특징이다.</p>\n<h3 id=\"11-각-테이블-별-비용-및-스펙\" style=\"position:relative;\"><a href=\"#11-%EA%B0%81-%ED%85%8C%EC%9D%B4%EB%B8%94-%EB%B3%84-%EB%B9%84%EC%9A%A9-%EB%B0%8F-%EC%8A%A4%ED%8E%99\" aria-label=\"11 각 테이블 별 비용 및 스펙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1 각 테이블 별 비용 및 스펙</h3>\n<p><img src=\"/blog/media/aws/s3/s3-storage-class2.png\" alt=\"img2\"></p>\n<blockquote>\n<p>이미지 출처 - <a href=\"https://aws.amazon.com/ko/s3/storage-classes/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://aws.amazon.com/ko/s3/storage-classes/</a></p>\n</blockquote>\n<p>이렇게 데이터에 따라 특정 규칙을 정하고 어느 class로 보낼지 정할 수가 있고, 아니면 아예 삭제 해버릴수도 있는데 이러한 기능을 <code class=\"language-text\">lifecycle rule(수명주기 규칙)</code>이라고 한다.</p>\n<p>aws 사이트에서 s3 → 버킷 선택 → 수명주기 구성 을 보면 해당 규칙을 확인 할 수가 있다.</p>\n<h3 id=\"12-수명-주기-규칙-구성\" style=\"position:relative;\"><a href=\"#12-%EC%88%98%EB%AA%85-%EC%A3%BC%EA%B8%B0-%EA%B7%9C%EC%B9%99-%EA%B5%AC%EC%84%B1\" aria-label=\"12 수명 주기 규칙 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2 수명 주기 규칙 구성</h3>\n<p><img src=\"/blog/media/aws/s3/s3-storage-class3.png\" alt=\"img3\"></p>\n<p>수명 주기 규칙 이름은 그냥 구분용 이름이고, 규칙 범위 선택 을 통해 대상을 지정할 수 있다. 대상 지정은 특정 디렉토리 하위를 지정(접두사)하거나 객체가 가지고 있는 tag를 기준으로 그 대상을 특정 할수가 있다.</p>\n<blockquote>\n<p>참고로 s3파일 삭제를 이런 수명 주기를 이용해서 삭제하면 좋은점이 혹시나 삭제 대상이 많아도 일단 tag만 붙여 준 뒤, tag가 붙은 후 시간이 지나면 삭제되게 처리하면 삭제 처리 시간도 빠르고 혹시나마 복구를 해야한다면 빠르게 복구 할 수도 있다.</p>\n</blockquote>\n<h3 id=\"12-수명-주기-규칙-작업\" style=\"position:relative;\"><a href=\"#12-%EC%88%98%EB%AA%85-%EC%A3%BC%EA%B8%B0-%EA%B7%9C%EC%B9%99-%EC%9E%91%EC%97%85\" aria-label=\"12 수명 주기 규칙 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2 수명 주기 규칙 작업</h3>\n<p><img src=\"/blog/media/aws/s3/s3-storage-class4.png\" alt=\"img4\"></p>\n<p>위에서 대상을 지정했다면, 여기서 파일을 진짜 어떻게 처리할지 셋팅하게 된다. 앞서 말한대로 생성 후, 지정된 날짜가 지나면 storage class를 옮겨버리거나(위의 2개 작업) 물리적으로 삭제 처리 되도록 지정(3,4번째꺼) 할 수도 있다.</p>\n<blockquote>\n<p><code class=\"language-text\">버전</code>이라는 말도 나오는데, 그냥 <code class=\"language-text\">s3 객체 버전 관리</code>를 말하는거다.</p>\n</blockquote>\n<p><img src=\"/blog/media/aws/s3/s3-storage-class5.png\" alt=\"img5\">\n이런식으로 클릭클릭 하면서 셋팅해 나아가면 최종적으로 생성일을 기준으로 데이터 라이프 사이클을 확인 할 수가 있다</p>\n<blockquote>\n<p>위 이미지는 특정 날짜가 지나면 class를 계속 옮기다가 최종적으로 영구 삭제 처리 되도록 설정한 내용이다</p>\n</blockquote>\n<h2 id=\"2-terraform으로-구현\" style=\"position:relative;\"><a href=\"#2-terraform%EC%9C%BC%EB%A1%9C-%EA%B5%AC%ED%98%84\" aria-label=\"2 terraform으로 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. terraform으로 구현</h2>\n<p>전체 소스는 <a href=\"https://github.com/qweasd147/StudyNote/blob/master/terraform/s3_lifecycle/main.tf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">개인 git repository</a>에 올려놨고, 몇가지 옵션 설명을 하자면 아래와 같다</p>\n<h3 id=\"21-aws_s3_bucket_public_acces_block\" style=\"position:relative;\"><a href=\"#21-aws_s3_bucket_public_acces_block\" aria-label=\"21 aws_s3_bucket_public_acces_block permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1 <code class=\"language-text\">aws_s3_bucket_public_acces_block</code></h3>\n<p>별다른 설정없이 만들면 s3에 올려진 파일들은 외부에서 접근이 가능하다. 그냥 테스트 용도긴 하지만 이런거 굉장히 불편해서 다 block 되게 막아놓기 위해 설정 해놨다\n<img src=\"/blog/media/aws/s3/s3-image-01.png\" alt=\"img6\"></p>\n<p>웹에서 보면 위와 같은 설정 적용 한거다</p>\n<h3 id=\"22-aws_s3_bucketlifecycle_configuration\" style=\"position:relative;\"><a href=\"#22-aws_s3_bucketlifecycle_configuration\" aria-label=\"22 aws_s3_bucketlifecycle_configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2 <code class=\"language-text\">aws_s3_bucketlifecycle_configuration</code></h3>\n<p>lifecycle 적용이 필요한 terraform resource이다</p>\n<h3 id=\"23-aws-웹에서-봤을때-설정-결과-화면\" style=\"position:relative;\"><a href=\"#23-aws-%EC%9B%B9%EC%97%90%EC%84%9C-%EB%B4%A4%EC%9D%84%EB%95%8C-%EC%84%A4%EC%A0%95-%EA%B2%B0%EA%B3%BC-%ED%99%94%EB%A9%B4\" aria-label=\"23 aws 웹에서 봤을때 설정 결과 화면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3 aws 웹에서 봤을때 설정 결과 화면</h3>\n<p>웹에서 보면 아래와 같이 적용된 걸 확인 할수 있다(terraform 소스 적용한 결과)</p>\n<p><img src=\"/blog/media/aws/s3/s3-image-02.png\" alt=\"img7\">\n<img src=\"/blog/media/aws/s3/s3-image-03.png\" alt=\"img8\"></p>","fields":{"slug":"/posts/etc/etc-tf-s3-lifecycle/","tagSlugs":["/tag/terraform/","/tag/iac/","/tag/aws/","/tag/s3/"]},"frontmatter":{"date":"2022-06-20T01:35:28.075Z","description":"s3의 lifecycle 기본 설명 + 테라폼으로 구현","tags":["terraform","iac","aws","s3"],"title":"aws - S3 Life cycle","socialImage":null}}},"pageContext":{"slug":"/posts/etc/etc-tf-s3-lifecycle/"}},"staticQueryHashes":["1828819329","251939775","2839666046","401334301"]}