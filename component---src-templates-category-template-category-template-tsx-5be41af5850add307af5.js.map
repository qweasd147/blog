{"version":3,"file":"component---src-templates-category-template-category-template-tsx-5be41af5850add307af5.js","mappings":"kNAwFA,UArE0C,SAAC,GAAkC,IAAhCA,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YACjD,GAAqDC,EAAAA,EAAAA,MAAtCC,EAAf,EAAQC,MAA4BC,EAApC,EAA0BC,SAElBC,EAAsBN,EAAtBM,MAAOC,EAAeP,EAAfO,WACPC,EACND,EADMC,YAAaC,EACnBF,EADmBE,aAAcC,EACjCH,EADiCG,aAAcC,EAC/CJ,EAD+CI,YAAaC,EAC5DL,EAD4DK,YAGtDC,EAAUd,EAAKe,kBAAfD,MACFE,EACJP,EAAc,EACPF,EADP,WACuBE,EADvB,MACwCN,EACjCI,EAFP,MAEkBJ,EAGdC,EAAQG,SAAAA,EAAOU,OACjBV,EAAMW,QAAQ,WAAW,SAACC,GAAD,OAAeA,EAAUC,iBAClDb,EAKJ,OAHAc,QAAQC,IAAI,QAASlB,GACrBiB,QAAQC,IAAI,QAASf,GAGnBgB,EAAAA,cAACC,EAAAA,EAAD,CAAQpB,MAAOY,EAAWS,YAAapB,GACrCkB,EAAAA,cAACG,EAAAA,EAAD,MACAH,EAAAA,cAACI,EAAAA,EAAD,CAAMvB,MAAOG,GACXgB,EAAAA,cAACK,EAAAA,EAAD,CAAMd,MAAOA,IACbS,EAAAA,cAACM,EAAAA,EAAD,CACEnB,aAAcA,EACdC,aAAcA,EACdC,YAAaA,EACbC,YAAaA","sources":["webpack://gatsby-starter-lumen/./src/templates/CategoryTemplate/CategoryTemplate.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { graphql } from \"gatsby\";\n\nimport { Feed } from \"@/components/Feed\";\nimport { Layout } from \"@/components/Layout\";\nimport { Page } from \"@/components/Page\";\nimport { Pagination } from \"@/components/Pagination\";\nimport { Sidebar } from \"@/components/Sidebar\";\nimport { useSiteMetadata } from \"@/hooks\";\nimport { AllMarkdownRemark, PageContext } from \"@/types\";\n\ninterface Props {\n  data: {\n    allMarkdownRemark: AllMarkdownRemark;\n  };\n  pageContext: PageContext;\n}\n\nconst CategoryTemplate: React.FC<Props> = ({ data, pageContext }: Props) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n\n  const { group, pagination } = pageContext;\n  const { currentPage, prevPagePath, nextPagePath, hasPrevPage, hasNextPage } =\n    pagination;\n\n  const { edges } = data.allMarkdownRemark;\n  const pageTitle =\n    currentPage > 0\n      ? `${group} - Page ${currentPage} - ${siteTitle}`\n      : `${group} - ${siteTitle}`;\n\n  // 첫글자를 대문자로 변환\n  const title = group?.length\n    ? group.replace(/\\b[a-z]/, (firstChar) => firstChar.toUpperCase())\n    : group;\n\n  console.log(\"title\", title);\n  console.log(\"group\", group);\n\n  return (\n    <Layout title={pageTitle} description={siteSubtitle}>\n      <Sidebar />\n      <Page title={group}>\n        <Feed edges={edges} />\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query CategoryTemplate($group: String, $limit: Int!, $offset: Int!) {\n    allMarkdownRemark(\n      limit: $limit\n      skip: $offset\n      filter: {\n        frontmatter: {\n          category: { eq: $group }\n          template: { eq: \"post\" }\n          draft: { ne: true }\n        }\n      }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            description\n            category\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default CategoryTemplate;\n"],"names":["data","pageContext","useSiteMetadata","siteTitle","title","siteSubtitle","subtitle","group","pagination","currentPage","prevPagePath","nextPagePath","hasPrevPage","hasNextPage","edges","allMarkdownRemark","pageTitle","length","replace","firstChar","toUpperCase","console","log","React","Layout","description","Sidebar","Page","Feed","Pagination"],"sourceRoot":""}