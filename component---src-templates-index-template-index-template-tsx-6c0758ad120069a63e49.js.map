{"version":3,"file":"component---src-templates-index-template-index-template-tsx-6c0758ad120069a63e49.js","mappings":"kNAwEA,UArDuC,SAAC,GAAkC,IAAhCA,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAC9C,GAAqDC,EAAAA,EAAAA,MAAtCC,EAAf,EAAQC,MAA4BC,EAApC,EAA0BC,SAElBC,EAAeN,EAAfM,WACAC,EACND,EADMC,YAAaC,EACnBF,EADmBE,YAAaC,EAChCH,EADgCG,YAAaC,EAC7CJ,EAD6CI,aAAcC,EAC3DL,EAD2DK,aAGrDC,EAAUb,EAAKc,kBAAfD,MACFE,EACJP,EAAc,EAAdA,gBAAkCA,EAAlC,MAAmDL,EAAcA,EAEnE,OACEa,EAAAA,cAACC,EAAAA,EAAD,CAAQb,MAAOW,EAAWG,YAAab,GACrCW,EAAAA,cAACG,EAAAA,EAAD,CAASC,SAAO,IAChBJ,EAAAA,cAACK,EAAAA,EAAD,KACEL,EAAAA,cAACM,EAAAA,EAAD,CAAMT,MAAOA,IACbG,EAAAA,cAACO,EAAAA,EAAD,CACEZ,aAAcA,EACdC,aAAcA,EACdF,YAAaA,EACbD,YAAaA","sources":["webpack://gatsby-starter-lumen/./src/templates/IndexTemplate/IndexTemplate.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { graphql } from \"gatsby\";\n\nimport { Feed } from \"@/components/Feed\";\nimport { Layout } from \"@/components/Layout\";\nimport { Page } from \"@/components/Page\";\nimport { Pagination } from \"@/components/Pagination\";\nimport { Sidebar } from \"@/components/Sidebar\";\nimport { useSiteMetadata } from \"@/hooks\";\nimport { AllMarkdownRemark, PageContext } from \"@/types\";\n\ninterface Props {\n  data: {\n    allMarkdownRemark: AllMarkdownRemark;\n  };\n  pageContext: PageContext;\n}\n\nconst IndexTemplate: React.FC<Props> = ({ data, pageContext }: Props) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n\n  const { pagination } = pageContext;\n  const { currentPage, hasNextPage, hasPrevPage, prevPagePath, nextPagePath } =\n    pagination;\n\n  const { edges } = data.allMarkdownRemark;\n  const pageTitle =\n    currentPage > 0 ? `Posts - Page ${currentPage} - ${siteTitle}` : siteTitle;\n\n  return (\n    <Layout title={pageTitle} description={siteSubtitle}>\n      <Sidebar isIndex />\n      <Page>\n        <Feed edges={edges} />\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query IndexTemplate($limit: Int!, $offset: Int!) {\n    allMarkdownRemark(\n      limit: $limit\n      skip: $offset\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          fields {\n            categorySlug\n            slug\n          }\n          frontmatter {\n            description\n            category\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexTemplate;\n"],"names":["data","pageContext","useSiteMetadata","siteTitle","title","siteSubtitle","subtitle","pagination","currentPage","hasNextPage","hasPrevPage","prevPagePath","nextPagePath","edges","allMarkdownRemark","pageTitle","React","Layout","description","Sidebar","isIndex","Page","Feed","Pagination"],"sourceRoot":""}